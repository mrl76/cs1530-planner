Calendar Test Plan for Unit Tests
Michael Long
Created: 11/13/2018
Last Updated: 11/14/2018

Classes to test:
-Event.java
-Exam.java
-Assignment.java
-Appointment.java
-Interval.java
-Timetable.java
-Calendar.java
-Course.java

Note: Interval.java was excluded from unit testing due to it only holding an enum object (11/1/2018)
----------------------------------------------------------------------------------------------------
Event.java (ll/13/2018)

Methods:
public Event(String name, String description, Date date)
public Event(String name)
public String getName()
public void setName(String name)
public String getDescription()
public void setDescription(String description)
public Date getDate()
public void setDate(Date date)
public int compareTo(Event o)

Because this an abstract class I may need to extend it for a
test class

1) IDENTIFIER:      case-event-full-constructor
   DESCRIPTION:     This test verifies that the full constructor method of the Event class
                    properly instatiates an Event object based on the passed in arguements
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The test should verify that a new Event object has been created 
                    using the correct passed in arguements 

2) IDENTIFIER:      case-event-short-constructor
   DESCRIPTION:     This test verifies that the short constructor method of the Event class
                    properly instatiates an Event object based on the passed in name
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The test should verify that a new Event object has been created 
                    using the correct passed in name, while the other feilds should
                    be undefined

3) IDENTIFIER:      case-event-get-name
   DESCRIPTION:     This test verifies that the getName() function of the Event class 
                    will return the correct name varibale associated with the object
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  This method should return the name of the Event object from which it
                    was called

4) IDENTIFIER:      case-event-set-name
   DESCRIPTION:     This test verifies that the name field of the Event object from which 
                    the method was called from is updated to the new passed in name when 
                    this method is called
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The name variable of the Event object that called the method should 
                    be updated to the new name

5) IDENTIFIER:      case-event-get-description
   DESCRIPTION:     This test verifies that the description of the Event object is returned
                    when this method is called
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The method should return the description of the Event object when it is 
                    called

6) IDENTIFIER:      case-event-set-description
   DESCRIPTION:     This test verifies that the description of the Event object from where
                    this method is called is changed to the passed in description
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The decription variable of the Event object from which this method is
                    called whould be changed to the passed in description

7) IDENTIFIER:      case-event-get-date
   DESCRIPTION:     This test verifies that the correct date is returned when the getDate()
                    method is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The method shall return the correct date object that is held within the 
                    Event object

8) IDENTIFIER:      case-event-set-date
   DESCRIPTION:     This test verifies that when the setDate() method is called, the date 
                    variable within the Event object from where the method was called changes
                    to the passed in date
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The date variable with in the Event object from with the method was called
                    should be equal to the date that was passed in as an arguement

9) IDENTIFIER:      case-event-compare-to-greater
   DESCRIPTION:     This test verifies that when an event with a later date object is passed 
                    into the compareTo() function, a positive integer is returned
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The compareTo() method should return a positive integer that coresponds
                    to the difference between the two dates

10)IDENTIFIER:      case-event-compare-to-less
   DESCRIPTION:     This test verifies that when an event with a later date object is passed 
                    into the compareTo() function, a negative integer is returned
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The compareTo() method should return a negative integer that coresponds
                    to the difference between the two dates
----------------------------------------------------------------------------------------------------
Exam.java(11/13/2018)

Methods:
public Exam(String name, Course course)
public Exam(String name)
public Course getCourse()
public void setCourse(Course course)

1) IDENTIFIER:      case-exam-full-constrcutor
   DESCRIPTION:     This test verifies that the Exam is properly initialized when the full 
                    constructor is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Exam class
   POSTCONDITIONS:  The method will return a properly formatted Exam object using all of the
                    passed in arguements

2) IDENTIFIER:      case-exam-small-constructor
   DESCRIPTION:     This test verifies that the Exam is properly initialized when the small
                    constructor is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Exam class
   POSTCONDITIONS:  This method will return a properly formatted Exam object using the name 
                    passed in as an argument

3) IDENTIFIER:      case-exam-get-course
   DESCRIPTION:     This test verifies that the getCourse() method of the Exam class returns
                    the Course that is stored in the Exam object
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Exam class
   POSTCONDITIONS:  The method should return the Course Object that is stored in the Exam object

4) IDENTIFIER:      case-exam-set-course
   DESCRIPTION:     This test verifies that the setCourse() method of the Exam class will change
                    the course that is stored in the Exam object to the Course that is passed into
                    the method
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Exam class
   POSTCONDITIONS:  The setCourse() method should change the stored Course object to the Course
                    passed into the method

----------------------------------------------------------------------------------------------------
Assignment.java(11/13/2018)

Methods:
public Assignment(String name, Course course)
public Assignment(String name)
public Course getCourse()
public void setCourse(Course course)

1) IDENTIFIER:      case-assignment-full-constructor
   DESCRIPTION:     This test verifies that the Assignment is properly initialized when the full 
                    constructor is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Assignment class
   POSTCONDITIONS:  The method should return a new Assignment object that was created bugin the
                    passed in name and the passed in course object

2) IDENTIFIER:      case-assignment-short-constructor
   DESCRIPTION:     This test verifies that the Assignment is properly initialized when the short 
                    constructor is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Assignment class
   POSTCONDITIONS:  The method should return a new Assignment object that was created using the
                    passed in name and the course object should be left NULL

3) IDENTIFIER:      case-assignment-get-course-set
   DESCRIPTION:     This test verifies that
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Assignment class
   POSTCONDITIONS:  The method should return the course method associated with the assignment object

4) IDENTIFIER:      case-assignment-get-course-not-set
   DESCRIPTION:     This test verifies that
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Assignment class
   POSTCONDITIONS:  The method should return some kind of error when this method is called 
                    but no course has been set

5) IDENTIFIER:      case-assignment-set-course
   DESCRIPTION:     This test verifies that
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Assignment class
   POSTCONDITIONS:  This method should set the Course object associated with this Assignment object
                    to the passed in Course object

----------------------------------------------------------------------------------------------------
Appointment.java(11/14/2018)

Methods:
public Appointment(String name, String description, Date date)
public Appointment(String name)
public String getName()
public void setName(String name)
public String getDescription()
public void setDescription(String description)
public Date getDate()
public void setDate(Date date)
@Override
public int compareTo(Appointment o)

1) IDENTIFIER:      case-appointment-full-constructor
   DESCRIPTION:     This test verifies that the Appointment is properly initialized when the full 
                    constructor is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class
   POSTCONDITIONS:  The method should return a new Assignment object that was created bugin the
                    passed in name and the passed in course object

2) IDENTIFIER:      case-appointment-short-constructor
   DESCRIPTION:     This test verifies that the Appointment is properly initialized when the short 
                    constructor is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Apointment class
   POSTCONDITIONS:  The method should return a new Appointment object that was created using in the
                    passed in name and the date object and description should be left NULL

3) IDENTIFIER:      case-appointment-get-name
   DESCRIPTION:     This test verifies that when the method getName() is called, it returns the name string
                    that is associated with the object.
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class
   POSTCONDITIONS:  The method should return a string that is associated with the appointment
                    object that it was called from

4) IDENTIFIER:      case-appointment-set-name
   DESCRIPTION:     This test verifes that when the mehtod setName() is called from a appointment object
                    that the name associated with the object is changed to the passed in name
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class
   POSTCONDITIONS:

5) IDENTIFIER:      case-appointment-get-description
   DESCRIPTION:     This test verifies that when the getDescription() method is called from a Appointment
                    object that the description associated with the Appointment object is returned 
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class
   POSTCONDITIONS:  This method should return the description that is associated with the Appointment
                    from which it was called

6) IDENTIFIER:      case-appointment-set-decription
   DESCRIPTION:     This test verifies that when the setDescription() method is called from a 
                    Appointment object that the Appointment object's description changes to the
                    passed in description
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class
   POSTCONDITIONS:  This method should change the description associated with the Appointment
                    object to the passed in description

7) IDENTIFIER:      case-appointment-get-date
   DESCRIPTION:     This test verifies that when the getDate() method is called from an Appointment
                    object, that the date associated with the Appointment object is returned
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class 
   POSTCONDITIONS:  When this method is called, it should return the date that is associated with
                    the Appointment object

8) IDENTIFIER:      case-appointment-set-date
   DESCRIPTION:     This test verifies that when the setDate() method is called from an Appointment
                    object, that the Appointment's associated date is changed to the passed in date
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class
   POSTCONDITIONS:  This method should change the date associated with the Appointment object to 
                    the passed in one

9) IDENTIFIER:      case-appointment-compare-to-greater
   DESCRIPTION:     This test verifies that when an appointment with a later date object is passed 
                    into the compareTo() function, a positive integer is returned
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Appointment class
   POSTCONDITIONS:  The compareTo() method should return a positive integer that coresponds
                    to the difference between the two dates

10)IDENTIFIER:      case-appointment-compare-to-less
   DESCRIPTION:     This test verifies that when an appointment with a later date object is passed 
                    into the compareTo() function, a negative integer is returned
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  The compareTo() method should return a negative integer that coresponds
                    to the difference between the two dates

----------------------------------------------------------------------------------------------------
Interval.java(11/13/2018)

Methods:
Currently Interval.java is simply an enum, no need for testing

----------------------------------------------------------------------------------------------------
Timetable.java(11/13/2018)

Methods:
public Timetable(Interval interval, int intervalSize, Date startDate, Date endDate, boolean allDay, boolean[] days)
public Timetable(Date startDate)
public Timetable(String dataString)
public String toString()
public Interval getInterval()
public void setInterval(Interval interval)
public int getIntervalSize()
public void setIntervalSize(int intervalSize)
public Date getStartDate()
public void setStartDate(Date startDate)
public Date getEndDate()
public void setEndDate(Date endDate)
public boolean isAllDay()
public void setAllDay(boolean allDay)
public boolean isDayOpen(DayOfWeek day)
public void setDay(DayOfWeek day, boolean open)

1) IDENTIFIER:      case-timetable-full-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

2) IDENTIFIER:      case-timetable-short-date-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

3) IDENTIFIER:      case-timetable-datastring-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

4) IDENTIFIER:      case-timetable-to-string
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

5) IDENTIFIER:      case-timetable-get-interval
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

6) IDENTIFIER:      case-timetable-set-interval
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

7) IDENTIFIER:      case-timetable-get-interval-size
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

8) IDENTIFIER:      case-timetable-set-interval-size
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

9) IDENTIFIER:      case-timetable-get-start-date
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

10)IDENTIFIER:      case-timetable-set-start-date
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

11)IDENTIFIER:      case-timetable-get-end-date
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

12)IDENTIFIER:      case-timetable-set-end-date
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

13)IDENTIFIER:      case-timetable-is-all-day
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

14)IDENTIFIER:      case-timetable-set-all-day
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

15)IDENTIFIER:      case-timetable-is-day-open
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

16)IDENTIFIER:      case-timetable-set-day
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

----------------------------------------------------------------------------------------------------
Calendar.java(11/13/2018)

Methods:
public Calendar()
public Set<Course> getCourses()
public void addCourse(Course c)
public void removeCourse(Course c)
public SortedSet<Appointment> getEvents()

1) IDENTIFIER:      case-calendar-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

2) IDENTIFIER:      case-calendar-get-course
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

3) IDENTIFIER:      case-calendar-remove-course
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

4) IDENTIFIER:      case-calendar-get-events
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

----------------------------------------------------------------------------------------------------
Course.java(11/13/2018)
Methods:
public Course(String name, String description, Timetable timetable)
public Course(String dataString)
public String getName()
public void setName(String name)
public String getDescription()
public void setDescription(String description)
public Timetable getTimetable()
public void setTimetable(Timetable timetable)
@Override
public String toString()

1) IDENTIFIER:      case-course-full-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

2) IDENTIFIER:      case-course-datastring-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

3) IDENTIFIER:      case-course-get-name
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

4) IDENTIFIER:      case-course-set-name
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

5) IDENTIFIER:      case-course-get-description
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

5) IDENTIFIER:      case-course-set-description
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

6) IDENTIFIER:      case-course-get-timetable
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

7) IDENTIFIER:      case-course-set-timetable
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

8) IDENTIFIER:      case-course-to-string
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  
----------------------------------------------------------------------------------------------------
UserProfile.java (11/14/2018)

Methods:
public UserProfile(String name, String password, Calendar cal)
public UserProfile(String name, String password)
public UserProfile(String name)
public Calendar getCalendar()
public String getUsername()
public boolean verifyPassword(String attempt)
public boolean verifyUserName(String attempt)
public void resetUserName(String newName)
public boolean resetPassword(String newPassword, String oldPassword)
@Override
public boolean equals(Object obj)
@Override
public int hashCode()

1) IDENTIFIER:      case-user-profile-full-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

2) IDENTIFIER:      case-user-profile-full-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

3) IDENTIFIER:      case-user-profile-full-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  

4) IDENTIFIER:      case-user-profile-full-constructor
   DESCRIPTION:     
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the appointment class
   POSTCONDITIONS:  