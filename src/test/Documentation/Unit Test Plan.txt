Test Plan for Unit Tests
Michael Long
11/1/2018

Classes to test:
-Event.java
-Exam.java
-Assignment.java
-Appointment.java
-Timetable.java
-Calendar.java
-Course.java

Note: Interval.java was excluded from unit testing due to it only holding an enum object (11/1/2018)
----------------------------------------------------------------------------------------------------
Event.java

Methods:
public Event(String name, String description, Date date)
public Event(String name)
public String getName()
public void setName(String name)
public String getDescription()
public void setDescription(String description)
public Date getDate()
public void setDate(Date date)
public int compareTo(Event o)

Because this an abstract class I may need to extend it for a
test class

1) IDENTIFIER:      case-full-constructor-happy-path
   DESCRIPTION:     This test verifies that the full constructor method of the Event class
                    properly instatiates an Event object based on the passed in arguements
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The test should verify that a new Event object has been created 
                    using the correct passed in arguements 

2) IDENTIFIER:      case-short-constructor-happy-path
   DESCRIPTION:     This test verifies that the short constructor method of the Event class
                    properly instatiates an Event object based on the passed in name
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The test should verify that a new Event object has been created 
                    using the correct passed in name, while the other feilds should
                    be undefined

3) IDENTIFIER:      case-get-name
   DESCRIPTION:     This test verifies that the getName() function of the Event class 
                    will return the correct name varibale associated with the object
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  This method should return the name of the Event object from which it
                    was called

4) IDENTIFIER:      case-set-name
   DESCRIPTION:     This test verifies that the name field of the Event object from which 
                    the method was called from is updated to the new passed in name when 
                    this method is called
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The name variable of the Event object that called the method should 
                    be updated to the new name

5) IDENTIFIER:      case-get-description
   DESCRIPTION:     This test verifies that the description of the Event object is returned
                    when this method is called
   PRECONDTIONS:    This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The method should return the description of the Event object when it is 
                    called

6) IDENTIFIER:      case-set-description
   DESCRIPTION:     This test verifies that the description of the Event object from where
                    this method is called is changed to the passed in description
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The decription variable of the Event object from which this method is
                    called whould be changed to the passed in description

7) IDENTIFIER:      case-get-date
   DESCRIPTION:     This test verifies that the correct date is returned when the getDate()
                    method is called
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The method shall return the correct date object that is held within the 
                    Event object

8) IDENTIFIER:      case-set-date-correct-format
   DESCRIPTION:     This test verifies that when the setDate() method is called, the date 
                    variable within the Event object from where the method was called changes
                    to the passed in date
   PRECONDITIONS:   This test will be part of automated unit testing all setup will be
                    handled with the test program
   EXECUTION STEPS: This test will run in the unit test program for the Event class
   POSTCONDITIONS:  The date variable with in the Event object from with the method was called
                    should be equal to the date that was passed in as an arguement

9) IDENTIFIER:      case-compare-to-greater
   DESCRIPTION:     This test verifies that when an event with a later date object is passed 
                    into 
   PRECONDITIONS:   
   EXECUTION STEPS: 
   POSTCONDITIONS:  

10) IDENTIFIER:      case-compare-to-less
    DESCRIPTION:
    PRECONDITIONS:
    EXECUTION STEPS:
    POSTCONDITIONS:
